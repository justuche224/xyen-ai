/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodosImport } from './routes/todos'
import { Route as ErrorImport } from './routes/error'
import { Route as DemoImport } from './routes/demo'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout/route'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PathlessLayoutIndexImport } from './routes/_pathlessLayout/index'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as DashboardAccountImport } from './routes/dashboard/account'
import { Route as DashboardQuizzesIndexImport } from './routes/dashboard/quizzes/index'
import { Route as DashboardQuizzesNewImport } from './routes/dashboard/quizzes/new'
import { Route as DashboardQuizzesQuizIdImport } from './routes/dashboard/quizzes/$quizId'
import { Route as PathlessLayoutauthSignUpImport } from './routes/_pathlessLayout/(auth)/sign-up'
import { Route as PathlessLayoutauthSignInImport } from './routes/_pathlessLayout/(auth)/sign-in'
import { Route as PathlessLayoutauthResetPasswordImport } from './routes/_pathlessLayout/(auth)/reset-password'
import { Route as PathlessLayoutauthForgotPasswordImport } from './routes/_pathlessLayout/(auth)/forgot-password'

// Create/Update Routes

const TodosRoute = TodosImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRoute,
} as any)

const ErrorRoute = ErrorImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRoute,
} as any)

const DemoRoute = DemoImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRouteRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const PathlessLayoutIndexRoute = PathlessLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAccountRoute = DashboardAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardQuizzesIndexRoute = DashboardQuizzesIndexImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardQuizzesNewRoute = DashboardQuizzesNewImport.update({
  id: '/quizzes/new',
  path: '/quizzes/new',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardQuizzesQuizIdRoute = DashboardQuizzesQuizIdImport.update({
  id: '/quizzes/$quizId',
  path: '/quizzes/$quizId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const PathlessLayoutauthSignUpRoute = PathlessLayoutauthSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)

const PathlessLayoutauthSignInRoute = PathlessLayoutauthSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => PathlessLayoutRouteRoute,
} as any)

const PathlessLayoutauthResetPasswordRoute =
  PathlessLayoutauthResetPasswordImport.update({
    id: '/(auth)/reset-password',
    path: '/reset-password',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)

const PathlessLayoutauthForgotPasswordRoute =
  PathlessLayoutauthForgotPasswordImport.update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => PathlessLayoutRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoImport
      parentRoute: typeof rootRoute
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorImport
      parentRoute: typeof rootRoute
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_pathlessLayout/': {
      id: '/_pathlessLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PathlessLayoutIndexImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_pathlessLayout/(auth)/forgot-password': {
      id: '/_pathlessLayout/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof PathlessLayoutauthForgotPasswordImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/_pathlessLayout/(auth)/reset-password': {
      id: '/_pathlessLayout/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof PathlessLayoutauthResetPasswordImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/_pathlessLayout/(auth)/sign-in': {
      id: '/_pathlessLayout/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof PathlessLayoutauthSignInImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/_pathlessLayout/(auth)/sign-up': {
      id: '/_pathlessLayout/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof PathlessLayoutauthSignUpImport
      parentRoute: typeof PathlessLayoutRouteImport
    }
    '/dashboard/quizzes/$quizId': {
      id: '/dashboard/quizzes/$quizId'
      path: '/quizzes/$quizId'
      fullPath: '/dashboard/quizzes/$quizId'
      preLoaderRoute: typeof DashboardQuizzesQuizIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/quizzes/new': {
      id: '/dashboard/quizzes/new'
      path: '/quizzes/new'
      fullPath: '/dashboard/quizzes/new'
      preLoaderRoute: typeof DashboardQuizzesNewImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/quizzes/': {
      id: '/dashboard/quizzes/'
      path: '/quizzes'
      fullPath: '/dashboard/quizzes'
      preLoaderRoute: typeof DashboardQuizzesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface PathlessLayoutRouteRouteChildren {
  PathlessLayoutIndexRoute: typeof PathlessLayoutIndexRoute
  PathlessLayoutauthForgotPasswordRoute: typeof PathlessLayoutauthForgotPasswordRoute
  PathlessLayoutauthResetPasswordRoute: typeof PathlessLayoutauthResetPasswordRoute
  PathlessLayoutauthSignInRoute: typeof PathlessLayoutauthSignInRoute
  PathlessLayoutauthSignUpRoute: typeof PathlessLayoutauthSignUpRoute
}

const PathlessLayoutRouteRouteChildren: PathlessLayoutRouteRouteChildren = {
  PathlessLayoutIndexRoute: PathlessLayoutIndexRoute,
  PathlessLayoutauthForgotPasswordRoute: PathlessLayoutauthForgotPasswordRoute,
  PathlessLayoutauthResetPasswordRoute: PathlessLayoutauthResetPasswordRoute,
  PathlessLayoutauthSignInRoute: PathlessLayoutauthSignInRoute,
  PathlessLayoutauthSignUpRoute: PathlessLayoutauthSignUpRoute,
}

const PathlessLayoutRouteRouteWithChildren =
  PathlessLayoutRouteRoute._addFileChildren(PathlessLayoutRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardQuizzesQuizIdRoute: typeof DashboardQuizzesQuizIdRoute
  DashboardQuizzesNewRoute: typeof DashboardQuizzesNewRoute
  DashboardQuizzesIndexRoute: typeof DashboardQuizzesIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardQuizzesQuizIdRoute: DashboardQuizzesQuizIdRoute,
  DashboardQuizzesNewRoute: DashboardQuizzesNewRoute,
  DashboardQuizzesIndexRoute: DashboardQuizzesIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PathlessLayoutRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/error': typeof ErrorRoute
  '/todos': typeof TodosRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/': typeof PathlessLayoutIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/forgot-password': typeof PathlessLayoutauthForgotPasswordRoute
  '/reset-password': typeof PathlessLayoutauthResetPasswordRoute
  '/sign-in': typeof PathlessLayoutauthSignInRoute
  '/sign-up': typeof PathlessLayoutauthSignUpRoute
  '/dashboard/quizzes/$quizId': typeof DashboardQuizzesQuizIdRoute
  '/dashboard/quizzes/new': typeof DashboardQuizzesNewRoute
  '/dashboard/quizzes': typeof DashboardQuizzesIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/error': typeof ErrorRoute
  '/todos': typeof TodosRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/': typeof PathlessLayoutIndexRoute
  '/admin': typeof AdminIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/forgot-password': typeof PathlessLayoutauthForgotPasswordRoute
  '/reset-password': typeof PathlessLayoutauthResetPasswordRoute
  '/sign-in': typeof PathlessLayoutauthSignInRoute
  '/sign-up': typeof PathlessLayoutauthSignUpRoute
  '/dashboard/quizzes/$quizId': typeof DashboardQuizzesQuizIdRoute
  '/dashboard/quizzes/new': typeof DashboardQuizzesNewRoute
  '/dashboard/quizzes': typeof DashboardQuizzesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/error': typeof ErrorRoute
  '/todos': typeof TodosRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/_pathlessLayout/': typeof PathlessLayoutIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/_pathlessLayout/(auth)/forgot-password': typeof PathlessLayoutauthForgotPasswordRoute
  '/_pathlessLayout/(auth)/reset-password': typeof PathlessLayoutauthResetPasswordRoute
  '/_pathlessLayout/(auth)/sign-in': typeof PathlessLayoutauthSignInRoute
  '/_pathlessLayout/(auth)/sign-up': typeof PathlessLayoutauthSignUpRoute
  '/dashboard/quizzes/$quizId': typeof DashboardQuizzesQuizIdRoute
  '/dashboard/quizzes/new': typeof DashboardQuizzesNewRoute
  '/dashboard/quizzes/': typeof DashboardQuizzesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/dashboard'
    | '/about'
    | '/contact'
    | '/demo'
    | '/error'
    | '/todos'
    | '/dashboard/account'
    | '/dashboard/settings'
    | '/'
    | '/admin/'
    | '/dashboard/'
    | '/forgot-password'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/quizzes/$quizId'
    | '/dashboard/quizzes/new'
    | '/dashboard/quizzes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/contact'
    | '/demo'
    | '/error'
    | '/todos'
    | '/dashboard/account'
    | '/dashboard/settings'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/forgot-password'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/quizzes/$quizId'
    | '/dashboard/quizzes/new'
    | '/dashboard/quizzes'
  id:
    | '__root__'
    | '/_pathlessLayout'
    | '/admin'
    | '/dashboard'
    | '/about'
    | '/contact'
    | '/demo'
    | '/error'
    | '/todos'
    | '/dashboard/account'
    | '/dashboard/settings'
    | '/_pathlessLayout/'
    | '/admin/'
    | '/dashboard/'
    | '/_pathlessLayout/(auth)/forgot-password'
    | '/_pathlessLayout/(auth)/reset-password'
    | '/_pathlessLayout/(auth)/sign-in'
    | '/_pathlessLayout/(auth)/sign-up'
    | '/dashboard/quizzes/$quizId'
    | '/dashboard/quizzes/new'
    | '/dashboard/quizzes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PathlessLayoutRouteRoute: typeof PathlessLayoutRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  DemoRoute: typeof DemoRoute
  ErrorRoute: typeof ErrorRoute
  TodosRoute: typeof TodosRoute
}

const rootRouteChildren: RootRouteChildren = {
  PathlessLayoutRouteRoute: PathlessLayoutRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  DemoRoute: DemoRoute,
  ErrorRoute: ErrorRoute,
  TodosRoute: TodosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_pathlessLayout",
        "/admin",
        "/dashboard",
        "/about",
        "/contact",
        "/demo",
        "/error",
        "/todos"
      ]
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout/route.tsx",
      "children": [
        "/_pathlessLayout/",
        "/_pathlessLayout/(auth)/forgot-password",
        "/_pathlessLayout/(auth)/reset-password",
        "/_pathlessLayout/(auth)/sign-in",
        "/_pathlessLayout/(auth)/sign-up"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/account",
        "/dashboard/settings",
        "/dashboard/",
        "/dashboard/quizzes/$quizId",
        "/dashboard/quizzes/new",
        "/dashboard/quizzes/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/demo": {
      "filePath": "demo.tsx"
    },
    "/error": {
      "filePath": "error.tsx"
    },
    "/todos": {
      "filePath": "todos.tsx"
    },
    "/dashboard/account": {
      "filePath": "dashboard/account.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard"
    },
    "/_pathlessLayout/": {
      "filePath": "_pathlessLayout/index.tsx",
      "parent": "/_pathlessLayout"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/_pathlessLayout/(auth)/forgot-password": {
      "filePath": "_pathlessLayout/(auth)/forgot-password.tsx",
      "parent": "/_pathlessLayout"
    },
    "/_pathlessLayout/(auth)/reset-password": {
      "filePath": "_pathlessLayout/(auth)/reset-password.tsx",
      "parent": "/_pathlessLayout"
    },
    "/_pathlessLayout/(auth)/sign-in": {
      "filePath": "_pathlessLayout/(auth)/sign-in.tsx",
      "parent": "/_pathlessLayout"
    },
    "/_pathlessLayout/(auth)/sign-up": {
      "filePath": "_pathlessLayout/(auth)/sign-up.tsx",
      "parent": "/_pathlessLayout"
    },
    "/dashboard/quizzes/$quizId": {
      "filePath": "dashboard/quizzes/$quizId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/quizzes/new": {
      "filePath": "dashboard/quizzes/new.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/quizzes/": {
      "filePath": "dashboard/quizzes/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
